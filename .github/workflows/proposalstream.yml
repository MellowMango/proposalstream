# .github/workflows/proposalstream.yml

name: Build and deploy Node.js app to Azure Web App - proposalstream

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

env:
  AZURE_WEBAPP_NAME: proposalstream
  NODE_VERSION: '20.x'

permissions:
  id-token: write
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install and build frontend
        run: |
          cd ./proposalstream-frontend
          npm install
          npm run build
          CI=true npm test -- --passWithNoTests

      - name: Install and build backend
        env:
          CONTRACT_TEMPLATES_CONTAINER: ${{ secrets.CONTRACT_TEMPLATES_CONTAINER }}
          PROPERTY_COI_CONTAINER: ${{ secrets.PROPERTY_COI_CONTAINER }}
          AZURE_STORAGE_CONNECTION_STRING: ${{ secrets.AZURE_STORAGE_CONNECTION_STRING }}
          MONGODB_URI: ${{ secrets.MONGODB_URI }}
          ENCRYPTION_KEY: ${{ secrets.ENCRYPTION_KEY }} 
          NODE_ENV: 'Production'
        run: |
          cd ./proposalstream-backend
          npm install
          npm run build --if-present
          # Remove or comment out the test line
          # npm test --passWithNoTests

      - name: Zip artifact for deployment
        run: zip -r release.zip ./proposalstream-frontend/build ./proposalstream-backend

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v3
        with:
          name: node-app
          path: release.zip

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v3
        with:
          name: node-app

      - name: Unzip artifact for deployment
        run: unzip release.zip

      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_E59E38541ED94CBE9B92B6AD616EC1C9 }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_4C2315A7FF3B40E79461F504EAB383A6 }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_621DA2FA5A534D5C9A14690C9BFB520F }}
          enable-AzPSSession: true
          audience: 'api://AzureADTokenExchange'

      - name: Test Azure Connection
        run: |
          az webapp list --query "[?name=='${{ env.AZURE_WEBAPP_NAME }}']"

      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          package: .
          slot-name: 'production'
          startup-command: 'npm start'

      - name: Log Deployment Info
        run: |
          echo "Deploying to App Service: ${{ env.AZURE_WEBAPP_NAME }}"
          echo "Package location: $(pwd)"
          ls -la  # List files being deployed

      - name: Check App Service Configuration
        run: |
          az webapp config show --name ${{ env.AZURE_WEBAPP_NAME }} --resource-group YourResourceGroupName
          az webapp show --name ${{ env.AZURE_WEBAPP_NAME }} --resource-group YourResourceGroupName --query state